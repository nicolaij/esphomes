#esphome  Version: 2024.12.2
substitutions:
  name: knopka-relay

esphome:
  name: ${name}
  includes:
    - esphome-esp-now-main/lib/MeshRC.h
  libraries:
    - ESP8266WiFi
  on_boot:
  - priority: -100
    then:
      - lambda: !lambda |-
          MeshRC::begin();
          ESP_LOGD("MeshRC", "Local softAPmacAddress %s", WiFi.softAPmacAddress().c_str());
          MeshRC::on("RELAY", [](uint8_t* data, uint8_t size) {
            if (*data == '0')
              id(rc).turn_off();

            if (*data == '1')
              id(rc).turn_on();
          });
      - light.turn_on:
          id: led
          effect: "Pulse"

esp8266:
  board: esp01_1m
#  restore_from_flash: true

# Enable logging
logger:

api:
  reboot_timeout: 0s

wifi:
  #ssid: !secret wifi_ssid_home
  #password: !secret wifi_password_home
  reboot_timeout: 0s
  ap:
    ssid: ${name}
    password: !secret wifi_password_home
    ap_timeout: 10s

web_server:
  port: 80
  ota: false
  version: 3
  local: true

#captive_portal:

ota:
  - platform: esphome
    password: ""

#status_led:
#  pin:
#    number: GPIO2
#    inverted: true

deep_sleep:
  id: deep_sleep_1

sensor:
  - platform: adc
    pin: VCC
    name: "VCC Voltage"
    on_value_range:
      - below: 3.2
        then:
          - deep_sleep.enter:
              id: deep_sleep_1
              sleep_duration: 1000h

  - platform: uptime
    name: Uptime Sensor

switch:
  - platform: gpio
    name: "Relay"
    id: rc
    pin:
      number: GPIO0
      inverted: true

output:
  - platform: esp8266_pwm
    id: pwm_led
    pin:
      number: GPIO2
      inverted: false
    frequency: 1000 Hz
    inverted: true

light:
  - platform: monochromatic
    output: pwm_led
    name: "Led"
    id: led
    default_transition_length: 0.1s
    effects:
      - automation:
          name: "Pulse"
          sequence:
            - light.turn_on:
                id: led
                brightness: 50%
            - delay: 0.1s
            - light.turn_on:
                id: led
                brightness: 0%
            - if:
                condition:
                  switch.is_on: rc
                then:
                  - delay: 1s
                else:
                  - delay: 5s

