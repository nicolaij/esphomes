#esphome  Version: 2024.12.2
substitutions:
  name: knopka-relay

esphome:
  name: ${name}
#  platformio_options:
#    board_build.f_cpu: 80000000L
  includes:
    - esphome-esp-now-main/lib/MeshRC.h
#  libraries:
#    - ESP8266WiFi
  on_boot:
  - priority: -100
    then:
      - lambda: !lambda |-
          MeshRC::begin();
          ESP_LOGD("custom boot", "Initialising MeshRC");
          MeshRC::on(">SETLIGHT1", [](uint8_t* data, uint8_t size) {
          ESP_LOGD("custom boot", "Receive MeshRC");      
          });

esp8266:
  board: esp01_1m

external_components:
  - source:
      type: local
      path: components
    components: [espnow]

# Enable logging
logger:

api:
  reboot_timeout: 0s

wifi:
  #ssid: !secret wifi_ssid_home
  #password: !secret wifi_password_home
  reboot_timeout: 0s
  ap:
    ssid: ${name}
    password: "123123123"
    ap_timeout: 10s

web_server:
  port: 80
  ota: false
  version: 3
  local: true

#captive_portal:

ota:
  - platform: esphome
    password: ""

status_led:
  pin:
    number: GPIO2
#    inverted: true

sensor:
  - platform: wifi_signal
    name: "WiFi Signal Sensor"

  - platform: uptime
    name: Uptime Sensor

switch:
  - platform: template
    name: "Relay control"
    id: rc
    optimistic: true
    on_turn_off:
      - output.turn_off:
          id: relayout
    on_turn_on:
      - output.turn_on:
          id: relayout

output:
  - platform: gpio
    id: relayout
    pin:
      number: GPIO0
      inverted: true

