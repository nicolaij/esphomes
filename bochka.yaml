esphome:
  name: bochka
  on_boot:
    priority: -100
    then:
      - delay: 20s
      - deep_sleep.enter:
          id: deep_sleep_1
          sleep_duration: !lambda |-
            if (id(batt).state > 3.6) return 10 * 60 * 1000 /*10min*/;
            else if (id(batt).state > 3.5) return 20 * 60 * 1000 /*20min*/;
            else if (id(batt).state > 3.4) return 60 * 60 * 1000 /*60min*/;
            else return 12 * 60 * 60 * 1000 /*12hours*/;

esp8266:
  board: d1_mini

deep_sleep:
  id: deep_sleep_1
  run_duration: 60s
  sleep_duration: 60min

# Enable logging
logger:

# Enable Home Assistant API
api:
  password: ""

ota:
  - platform: esphome
    password: ""

wifi:
  networks:
  - ssid: !secret wifi_ssid_home1 
    password: !secret wifi_password_home1
  - ssid: !secret wifi_ssid_home2
    password: !secret wifi_password_home2

  ap:
    ssid: "Bochka Fallback Hotspot"
    password: !secret ap_password

status_led:
  pin:
    number: D4
    inverted: true

i2c:
  sda: D2
  scl: D1
  scan: false
  id: bus_a
  frequency: 100khz

# Example configuration entry
sensor:
  - platform: ultrasonic
    trigger_pin: D5
    echo_pin: D6
    pulse_time: 30us
    timeout: 40m
    name: "Ultrasonic Sensor"
    id: sonic
    #update_interval: 60s
    on_value:
      - sensor.template.publish:
          id: water_level
          state: !lambda "return 100 / (0.19 - 1.05) * (id(sonic).state - 1.05);"

  - platform: wifi_signal
    name: "WiFi Signal Sensor"

  - platform: adc
    id: batt
    pin: A0
    name: "Battery voltage"
    filters:
      - multiply: 5.19

  - platform: aht10
    temperature:
      name: "Air Temperature"
      id: air_temperature
    humidity:
      name: "Air Humidity"
      id: relative_humidity

  - platform: absolute_humidity
    name: Absolute Humidity
    temperature: air_temperature
    humidity: relative_humidity

  - platform: template
    name: "Water level"
    id: water_level
    unit_of_measurement: "%"
